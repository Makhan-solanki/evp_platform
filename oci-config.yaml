# Oracle Cloud Infrastructure Configuration
# Update these values with your OCI account details

oci:
  # Region configuration
  region: "us-ashburn-1"  # Change to your preferred region
  
  # Tenancy and compartment
  tenancy_ocid: "ocid1.tenancy.oc1..example"  # Your tenancy OCID
  compartment_id: "ocid1.compartment.oc1..example"  # Your compartment OCID
  
  # Network configuration
  subnet_id: "ocid1.subnet.oc1.us-ashburn-1.example"  # Your subnet OCID
  availability_domain: "EXAMPLE:US-ASHBURN-AD-1"  # Your availability domain
  
  # Container registry
  registry:
    repo_name: "experiencehub"
    region: "us-ashburn-1"
  
  # Container instances configuration
  instances:
    server:
      display_name: "experiencehub-server"
      shape: "VM.Standard.A1.Flex"
      shape_config:
        ocpus: 1
        memory_in_gbs: 6
      environment_variables:
        NODE_ENV: "production"
        PORT: "5000"
    
    client:
      display_name: "experiencehub-client"
      shape: "VM.Standard.A1.Flex"
      shape_config:
        ocpus: 1
        memory_in_gbs: 6
      environment_variables:
        NODE_ENV: "production"
        PORT: "80"
  
  # Database configuration (optional)
  database:
    display_name: "experiencehub-db"
    db_name: "experiencehub"
    cpu_core_count: 1
    data_storage_size_in_tbs: 1
    db_workload: "OLTP"
  
  # Load balancer configuration (optional)
  load_balancer:
    display_name: "experiencehub-lb"
    shape_name: "flexible"
    shape_details:
      minimum_bandwidth_in_mbps: 10
      maximum_bandwidth_in_mbps: 100

# Application configuration
app:
  name: "ExperienceHub"
  version: "1.0.0"
  description: "Student Experience Verification Platform"
  
  # Docker images
  images:
    client: "experiencehub-client:latest"
    server: "experiencehub-server:latest"
  
  # Ports
  ports:
    client: 80
    server: 5000
  
  # Health check endpoints
  health_checks:
    client: "/"
    server: "/health"

# Environment variables for containers
environment:
  # Database
  DATABASE_URL: "postgresql://user:password@host:5432/dbname"
  
  # Firebase
  FIREBASE_PROJECT_ID: "your-project-id"
  FIREBASE_PRIVATE_KEY: "your-private-key"
  FIREBASE_CLIENT_EMAIL: "your-service-account-email"
  
  # JWT
  JWT_SECRET: "your-jwt-secret"
  JWT_REFRESH_SECRET: "your-refresh-secret"
  
  # Email
  SMTP_HOST: "smtp.gmail.com"
  SMTP_USER: "your-email"
  SMTP_PASSWORD: "your-app-password"
  
  # Cloudinary
  CLOUDINARY_CLOUD_NAME: "your-cloud-name"
  CLOUDINARY_API_KEY: "your-api-key"
  CLOUDINARY_API_SECRET: "your-api-secret"

# Deployment settings
deployment:
  # Auto-scaling configuration
  auto_scaling:
    enabled: true
    min_instances: 1
    max_instances: 5
    cpu_threshold: 70
    memory_threshold: 80
  
  # Monitoring
  monitoring:
    enabled: true
    metrics_interval: 60  # seconds
  
  # Backup
  backup:
    enabled: true
    retention_days: 30
    schedule: "0 2 * * *"  # Daily at 2 AM
  
  # SSL/TLS
  ssl:
    enabled: true
    certificate_arn: "your-certificate-arn"
    domain: "your-domain.com"

# Security configuration
security:
  # Network security
  network:
    allow_public_access: true
    security_groups:
      - "sg-allow-http"
      - "sg-allow-https"
      - "sg-allow-ssh"
  
  # Container security
  container:
    run_as_non_root: true
    read_only_root_filesystem: true
    allow_privilege_escalation: false
  
  # Secrets management
  secrets:
    use_oci_vault: true
    vault_ocid: "ocid1.vault.oc1..example"
